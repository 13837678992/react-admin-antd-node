{
  "compilerOptions": {
    "target": "ESNext", // 指定ECMAScript目标版本，此处已改为'ESNext'，和webpack.config.js中的target保持一致
    "module": "ESNext", // 指定模块代码生成，'ESNext对应webpack.config.js中的module配置
    "lib": ["es6", "es2016", "es2017", "es2018", "esnext", "dom"], // 在编译过程中需要引入的库文件
    "allowJs": true, // 允许编译JavaScript文件
    "jsx": "react", // 指定JSX代码生成
    "sourceMap": true, // 生成对应的'.map文件，这样调试时就可以直接查看TypeScript源码
    "noEmit": false, // 配合 webpack，关闭noEmit，让 webpack 接管文件输出
    "importHelpers": true, // 从 'tslib' 导入辅助函数，减小体积
    "strict": true, // 启用所有的严格类型检查选项
    "noUnusedLocals": true, // 在表达式里禁止未使用的局部变量
    "moduleResolution": "node", // 指定模块解析策略，node适用于Node.js/io.js模式
    "baseUrl": "./src", // 用于解析非相对模块名的基本目录
    "paths": {
      "@components/*": ["components/*"],
      "@services/*": ["services/*"],
      "@utils/*": ["utils/*"],
      "@actions/*": ["actions/*"],
      "@reducers/*": ["reducers/*"],
      "@hooks/*": ["hooks/*"],
      "@routers/*": ["routers/*"],
      "@view/*": ["view/*"]
    }, // 一系列的导入重映射条目
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入
    "esModuleInterop": true, // 启用CommonJS和ES模块之间的发射互操作性
    "experimentalDecorators": true // 启用实验性的ES装饰器
  },
  "include": [
    "src", // 编译的文件目录或文件
    "**/*.tsx",
    "**/*.ts",
    // "**/*.js"
  ],
  "exclude": [
    "node_modules", // 在编译过程中被排除的文件
    "build"
  ]
}
